apiVersion: kvctl.captainirs.dev/v1
kind: KVStore
metadata:
  labels:
    app.kubernetes.io/name: kvctl
    app.kubernetes.io/managed-by: kustomize
  name: kvs
  namespace: kvstore-testing
spec:
  shards: 1
  replicas: 3
  ingressDomain: kvstore-testing.svc.localho.st
  podSpec:
    terminationGracePeriodSeconds: 10
    setHostnameAsFQDN: false
    containers:
    - name: shard
      image: sharded-kvs-shard
      imagePullPolicy: Never
      ports:
      - name: kvrpc
        containerPort: 8080
      - name: shardrpc
        containerPort: 8081
      - name: raftrpc
        containerPort: 8082
      env:
      - name: REPLICA_INDEX
        valueFrom:
          fieldRef:
            fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
      command:
      - bash
      - -c
      - |
        #!/bin/bash
        IFS='.' read REPLICA SHARD NAMESPACE SVC CLUSTERDOMAIN <<< "$(hostname --fqdn)"
        IP_ADDRESS=$(hostname -I)
        echo "Starting $(hostname --fqdn) with IP $IP_ADDRESS"
        for i in $(seq 1 30); do
          echo "Waiting for DNS. Retries: $i"
          nslookup "$(hostname --fqdn)" >/dev/null && break
          sleep 2
        done

        if [[ $REPLICA_INDEX -eq 0 ]]; then
          BOOTSTRAP=1
        else
          BOOTSTRAP=0
        fi

        exec /shard -shard=$SHARD -replica=$REPLICA -address=$IP_ADDRESS -shouldBootstrap=$BOOTSTRAP &
        pid=$!
        echo $pid > /shard.pid
        echo "Shard started as pid $pid"
        trap_sigterm() {
          echo "Received SIGTERM, killing $REPLICA.$SHARD"
          kill $pid
        }

        trap trap_sigterm SIGTERM

        wait $pid
      lifecycle:
        preStop:
          exec:
            command: ["/bin/bash", "-c", "kill -SIGINT $(cat /shard.pid) && sleep 30"]
      volumeMounts:
      - name: data-shard
        mountPath: /data
      - name: config-shard
        mountPath: /etc/config
    volumes:
      - name: config-shard
        configMap:
          name: kvs-config