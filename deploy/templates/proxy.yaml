apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-proxy-conf
data:
  httpd.conf: |
    ServerRoot "/usr/local/apache2"

    LoadModule mpm_event_module modules/mod_mpm_event.so
    LoadModule authz_core_module modules/mod_authz_core.so
    LoadModule proxy_html_module modules/mod_proxy_html.so
    LoadModule mime_module modules/mod_mime.so
    LoadModule log_config_module modules/mod_log_config.so
    LoadModule env_module modules/mod_env.so
    LoadModule headers_module modules/mod_headers.so
    LoadModule proxy_module modules/mod_proxy.so
    LoadModule proxy_http_module modules/mod_proxy_http.so
    LoadModule unixd_module modules/mod_unixd.so
    LoadModule vhost_alias_module modules/mod_vhost_alias.so
    LoadModule dir_module modules/mod_dir.so
    LoadModule alias_module modules/mod_alias.so
    LoadModule rewrite_module modules/mod_rewrite.so

    User www-data
    Group www-data

    ServerAdmin webmaster@localhost

    ErrorLog /proc/self/fd/2

    LogLevel info

    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    CustomLog /proc/self/fd/1 common

    Listen *:8080

    <Directory />
        AllowOverride None
        Require all denied
    </Directory>

    <VirtualHost *:8080>
        ServerName {{ .Release.Name }}.svc.{{ .Values.clusterDomain }}
        ServerAlias *.{{ .Release.Name }}.svc.{{ .Values.clusterDomain }}

        RewriteEngine On
        RewriteCond %{HTTP_HOST} ([^.]+)
        RewriteRule ^/(.*) http://%1.{{ .Release.Name }}.svc.{{ .Values.clusterDomain }}:8080/$1 [P]

        <Proxy http://%1.{{ .Release.Name }}.svc.{{ .Values.clusterDomain }}:8080/$1>
            ProxySet disablereuse=on
        </Proxy>
    </VirtualHost>
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-proxy
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-proxy
spec:
  initContainers:
    - name: init-nodes
      image: busybox
      command: ['sh', '-c', "until nslookup {{ .Release.Name }}-replica-0-node-0.{{ .Release.Name }}-replica-0-node.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}; do echo Waiting for nodes to come online; sleep 2; done"]
  containers:
    - name: httpd
      image: httpd
      volumeMounts:
        - name: apache-conf
          mountPath: /usr/local/apache2/conf/httpd.conf
          subPath: httpd.conf
          readOnly: true
  volumes:
    - name: apache-conf
      configMap:
        name: apache-conf
        items:
          - key: httpd.conf
            path: httpd.conf
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-proxy
spec:
  type: NodePort
  ports:
    - name: "http"
      port: 8080
      targetPort: 8080
      nodePort: 8080
  selector:
    app: {{ .Release.Name }}-proxy