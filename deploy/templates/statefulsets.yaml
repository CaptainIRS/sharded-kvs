{{- range $i, $group := until (int .Values.nodes) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: node-{{ $i }}-replica
  labels:
    app: {{ $.Release.Name }}
    group: node-{{ $i }}
  namespace: {{ $.Release.Namespace }}
spec:
  serviceName: node-{{ $i }}
  replicas: {{ $.Values.replicas }}
  selector:
    matchLabels:
      app: {{ $.Release.Name }}
      group: node-{{ $i }}
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}
        group: node-{{ $i }}
      annotations:
        # Trigger rolling update on sync
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      terminationGracePeriodSeconds: 0
      setHostnameAsFQDN: true
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      containers:
      - name: node
        image: {{ $.Values.nodeImage }}
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: NODE
          value: "{{ $i }}"
        - name: REPLICA
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
        command:
        - /node
        - -node=$(NODE)
        - -replica=$(REPLICA)
        - -nodes={{ $.Values.nodes }}
        - -replicas={{ $.Values.replicas }}
        volumeMounts:
        - name: data-node
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data-node
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Mi
---
{{- end }}
{{- range $i, $group := until (int .Values.nodes) }}
apiVersion: v1
kind: Service
metadata:
  name: node-{{ $i }}
  labels:
    app: {{ $.Release.Name }}
    group: node-{{ $i }}
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app: {{ $.Release.Name }}
    group: node-{{ $i }}
  clusterIP: None
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: controller-replica
  labels:
    app: {{ $.Release.Name }}
    group: controller
  namespace: {{ $.Release.Namespace }}
spec:
  serviceName: controller
  replicas: {{ $.Values.replicas }}
  selector:
    matchLabels:
      app: {{ $.Release.Name }}
      group: controller
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}
        group: controller
      annotations:
        # Trigger rolling update on sync
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      terminationGracePeriodSeconds: 0
      setHostnameAsFQDN: true
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      containers:
      - name: controller
        image: {{ $.Values.controllerImage }}
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: REPLICA
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
        command:
        - /controller
        - -replica=$(REPLICA)
        - -nodes={{ $.Values.nodes }}
        - -replicas={{ $.Values.replicas }}
        volumeMounts:
        - name: data-controller
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data-controller
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Mi
---
apiVersion: v1
kind: Service
metadata:
  name: controller
  labels:
    app: {{ $.Release.Name }}
    group: controller
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app: {{ $.Release.Name }}
    group: controller
  clusterIP: None
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
