# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import service_pb2 as service__pb2


class DbOperationsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Method1 = channel.unary_unary(
                '/DbOperations/Method1',
                request_serializer=service__pb2.Request1.SerializeToString,
                response_deserializer=service__pb2.Response1.FromString,
                )
        self.Method2 = channel.unary_unary(
                '/DbOperations/Method2',
                request_serializer=service__pb2.Request2.SerializeToString,
                response_deserializer=service__pb2.Response2.FromString,
                )
        self.InsertData = channel.unary_unary(
                '/DbOperations/InsertData',
                request_serializer=service__pb2.RequestInsertData.SerializeToString,
                response_deserializer=service__pb2.ResopnseInsertData.FromString,
                )
        self.SelectData = channel.unary_unary(
                '/DbOperations/SelectData',
                request_serializer=service__pb2.RequestSelectData.SerializeToString,
                response_deserializer=service__pb2.ResopnseSelectData.FromString,
                )


class DbOperationsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Method1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Method2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SelectData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DbOperationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Method1': grpc.unary_unary_rpc_method_handler(
                    servicer.Method1,
                    request_deserializer=service__pb2.Request1.FromString,
                    response_serializer=service__pb2.Response1.SerializeToString,
            ),
            'Method2': grpc.unary_unary_rpc_method_handler(
                    servicer.Method2,
                    request_deserializer=service__pb2.Request2.FromString,
                    response_serializer=service__pb2.Response2.SerializeToString,
            ),
            'InsertData': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertData,
                    request_deserializer=service__pb2.RequestInsertData.FromString,
                    response_serializer=service__pb2.ResopnseInsertData.SerializeToString,
            ),
            'SelectData': grpc.unary_unary_rpc_method_handler(
                    servicer.SelectData,
                    request_deserializer=service__pb2.RequestSelectData.FromString,
                    response_serializer=service__pb2.ResopnseSelectData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DbOperations', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DbOperations(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Method1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DbOperations/Method1',
            service__pb2.Request1.SerializeToString,
            service__pb2.Response1.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Method2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DbOperations/Method2',
            service__pb2.Request2.SerializeToString,
            service__pb2.Response2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DbOperations/InsertData',
            service__pb2.RequestInsertData.SerializeToString,
            service__pb2.ResopnseInsertData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SelectData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DbOperations/SelectData',
            service__pb2.RequestSelectData.SerializeToString,
            service__pb2.ResopnseSelectData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
